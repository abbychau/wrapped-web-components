{"version":3,"file":"index.js","sources":["../src/core/component.js","../src/core/html.js","../src/core/css.js","../src/core/define.js","../src/core/loader.js","../src/core/registry.js"],"sourcesContent":["/**\n * Base Component class that extends HTMLElement\n * Provides the foundation for creating web components with plain HTML, JS, and CSS\n */\n\nexport class Component extends HTMLElement {\n  constructor() {\n    super();\n\n    // Create shadow DOM only if explicitly requested\n    if (this.constructor.useShadow === true) {\n      this.attachShadow({ mode: 'open' });\n    }\n\n    // Store for component properties\n    this._props = {};\n\n    // Initialize component\n    this._initialize();\n  }\n\n  /**\n   * Initialize the component\n   * @private\n   */\n  _initialize() {\n    // Apply styles if defined\n    if (this.constructor.styles) {\n      this._applyStyles();\n    }\n\n    // Apply template if defined\n    if (this.constructor.template) {\n      this._applyTemplate();\n    }\n\n    // Call the component's init method if it exists\n    if (typeof this.init === 'function') {\n      this.init();\n    }\n  }\n\n  /**\n   * Apply styles to the component\n   * @private\n   */\n  _applyStyles() {\n    const styles = this.constructor.styles;\n\n    if (this.shadowRoot) {\n      // If using shadow DOM, add styles to the shadow root\n      const styleElement = document.createElement('style');\n      styleElement.textContent = styles;\n      this.shadowRoot.appendChild(styleElement);\n    } else {\n      // If not using shadow DOM, add scoped styles\n      const styleElement = document.createElement('style');\n\n      // Add a unique attribute to the component\n      const scopeAttr = `data-${this.tagName.toLowerCase()}-${Math.random().toString(36).substring(2, 8)}`;\n      this.setAttribute(scopeAttr, '');\n\n      // Process CSS to scope all selectors with the unique attribute\n      let scopedStyles = '';\n\n      // Split the CSS into rule blocks\n      const cssRules = styles.split('}');\n\n      for (let rule of cssRules) {\n        if (!rule.trim()) continue;\n\n        // Find the position of the opening brace\n        const braceIndex = rule.indexOf('{');\n        if (braceIndex === -1) continue;\n\n        // Extract selector and declarations\n        const selector = rule.substring(0, braceIndex).trim();\n        const declarations = rule.substring(braceIndex + 1).trim();\n\n        // Skip @-rules like @media, @keyframes, etc.\n        if (selector.startsWith('@')) {\n          scopedStyles += `${rule}}`;\n          continue;\n        }\n\n        // Add scope to each selector\n        const scopedSelector = selector\n          .split(',')\n          .map(s => `[${scopeAttr}] ${s.trim()}`)\n          .join(', ');\n\n        // Combine the scoped selector with the declarations\n        scopedStyles += `${scopedSelector} {${declarations}}`;\n      }\n\n      styleElement.textContent = scopedStyles;\n      document.head.appendChild(styleElement);\n    }\n  }\n\n  /**\n   * Apply template to the component\n   * @private\n   */\n  _applyTemplate() {\n    const template = this.constructor.template;\n\n    // Get the container (shadow root or the element itself)\n    const container = this.shadowRoot || this;\n\n    // If template is a function, call it with the component as context\n    if (typeof template === 'function') {\n      container.innerHTML = template.call(this);\n    } else {\n      container.innerHTML = template;\n    }\n\n    // Process any event bindings in the template\n    this._processEventBindings(container);\n  }\n\n  /**\n   * Process event bindings in the template\n   * @private\n   * @param {Element} container - The container element (shadow root or the element itself)\n   */\n  _processEventBindings(container) {\n    // Get all elements in the container\n    const allElements = container.querySelectorAll('*');\n\n    // Iterate through all elements to find those with data-event attributes\n    Array.from(allElements).forEach(element => {\n      // Get all attributes\n      const attributes = Array.from(element.attributes);\n\n      // Find event binding attributes\n      const eventAttrs = attributes.filter(attr => attr.name.startsWith('data-event-'));\n\n      eventAttrs.forEach(attr => {\n        // Extract event name and handler name\n        const eventName = attr.name.replace('data-event-', '');\n        const handlerName = attr.value;\n\n        // Check if the handler exists on the component\n        if (typeof this[handlerName] === 'function') {\n          // Add event listener\n          element.addEventListener(eventName, this[handlerName].bind(this));\n        } else {\n          console.warn(`Handler \"${handlerName}\" not found for event \"${eventName}\"`);\n        }\n\n        // Remove the attribute\n        element.removeAttribute(attr.name);\n      });\n    });\n  }\n\n  /**\n   * Called when the element is connected to the DOM\n   */\n  connectedCallback() {\n    if (typeof this.connected === 'function') {\n      this.connected();\n    }\n  }\n\n  /**\n   * Called when the element is disconnected from the DOM\n   */\n  disconnectedCallback() {\n    if (typeof this.disconnected === 'function') {\n      this.disconnected();\n    }\n  }\n\n  /**\n   * Called when an observed attribute changes\n   * @param {string} name - The name of the attribute\n   * @param {string} oldValue - The old value of the attribute\n   * @param {string} newValue - The new value of the attribute\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    // Update the corresponding property\n    if (oldValue !== newValue) {\n      // Convert attribute name to property name (kebab-case to camelCase)\n      const propName = name.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n\n      // Update the property\n      this[propName] = this._parseAttributeValue(newValue);\n\n      // Call the attribute changed method if it exists\n      if (typeof this.attributeChanged === 'function') {\n        this.attributeChanged(name, oldValue, newValue);\n      }\n    }\n  }\n\n  /**\n   * Parse attribute value to the appropriate type\n   * @private\n   * @param {string} value - The attribute value\n   * @returns {*} - The parsed value\n   */\n  _parseAttributeValue(value) {\n    // If value is null or undefined, return it as is\n    if (value === null || value === undefined) {\n      return value;\n    }\n\n    // Try to parse as JSON\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      // If parsing fails, return the value as a string\n      return value;\n    }\n  }\n\n  /**\n   * Query an element that works with both Shadow DOM and Light DOM\n   * @param {string} selector - CSS selector to query\n   * @returns {Element|null} - The first element matching the selector or null\n   */\n  getElement(selector) {\n    return this.shadowRoot\n      ? this.shadowRoot.querySelector(selector)\n      : this.querySelector(selector);\n  }\n\n  /**\n   * Query all elements that work with both Shadow DOM and Light DOM\n   * @param {string} selector - CSS selector to query\n   * @returns {NodeList} - All elements matching the selector\n   */\n  getAllElements(selector) {\n    return this.shadowRoot\n      ? this.shadowRoot.querySelectorAll(selector)\n      : this.querySelectorAll(selector);\n  }\n\n  /**\n   * Update the component with new properties\n   * @param {Object} props - The properties to update\n   */\n  update(props = {}) {\n    // Update properties\n    Object.entries(props).forEach(([key, value]) => {\n      this[key] = value;\n    });\n\n    // Re-render the component\n    if (this.constructor.template) {\n      this._applyTemplate();\n    }\n  }\n}\n","/**\n * HTML templating utility\n * Allows for creating HTML templates with interpolation\n */\n\n/**\n * Creates an HTML template string with interpolation\n * @param {Array<string>} strings - The template string parts\n * @param {...*} values - The values to interpolate\n * @returns {string} - The processed HTML string\n */\nexport function html(strings, ...values) {\n  return strings.reduce((result, string, i) => {\n    const value = values[i] || '';\n    \n    // Process the value based on its type\n    let processedValue;\n    \n    if (value === null || value === undefined) {\n      processedValue = '';\n    } else if (typeof value === 'object' && value.isEventBinding) {\n      // Handle event binding\n      processedValue = `data-event-${value.eventName}=\"${value.handlerName}\"`;\n    } else if (Array.isArray(value)) {\n      // Join arrays\n      processedValue = value.join('');\n    } else {\n      // Convert to string and escape HTML\n      processedValue = escapeHTML(String(value));\n    }\n    \n    return result + string + processedValue;\n  }, '');\n}\n\n/**\n * Creates an event binding for use in templates\n * @param {string} eventName - The name of the event (e.g., 'click')\n * @param {string} handlerName - The name of the handler method on the component\n * @returns {Object} - An event binding object\n */\nhtml.event = function(eventName, handlerName) {\n  return {\n    isEventBinding: true,\n    eventName,\n    handlerName\n  };\n};\n\n/**\n * Escapes HTML special characters to prevent XSS\n * @param {string} str - The string to escape\n * @returns {string} - The escaped string\n */\nfunction escapeHTML(str) {\n  return str\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n","/**\n * CSS utility for creating component styles\n */\n\n/**\n * Creates a CSS string from template literals\n * @param {Array<string>} strings - The template string parts\n * @param {...*} values - The values to interpolate\n * @returns {string} - The processed CSS string\n */\nexport function css(strings, ...values) {\n  return strings.reduce((result, string, i) => {\n    const value = values[i] || '';\n    return result + string + value;\n  }, '');\n}\n","/**\n * Utility for defining custom elements\n */\n\nimport { Component } from './component.js';\n\n/**\n * Define a custom element\n * @param {string} tagName - The tag name for the custom element\n * @param {Object} options - The component options\n * @param {string|Function} [options.template] - The HTML template\n * @param {string} [options.styles] - The CSS styles\n * @param {boolean} [options.useShadow=false] - Whether to use Shadow DOM\n * @param {Array<string>} [options.observedAttributes=[]] - Attributes to observe\n * @param {Object} [options.methods={}] - Methods to add to the component\n * @param {Object} [options.properties={}] - Properties to add to the component\n * @returns {typeof Component} - The component class\n */\nexport function define(tagName, options = {}) {\n  // Create a new component class that extends the base Component\n  class CustomComponent extends Component {}\n\n  // Add static properties\n  CustomComponent.template = options.template || '';\n  CustomComponent.styles = options.styles || '';\n  CustomComponent.useShadow = options.useShadow === true;\n  CustomComponent.observedAttributes = options.observedAttributes || [];\n\n  // Add methods to the prototype\n  if (options.methods) {\n    Object.entries(options.methods).forEach(([name, method]) => {\n      CustomComponent.prototype[name] = method;\n    });\n  }\n\n  // Add property getters and setters\n  if (options.properties) {\n    Object.entries(options.properties).forEach(([name, config]) => {\n      // Define the property\n      Object.defineProperty(CustomComponent.prototype, name, {\n        get() {\n          return this._props[name] !== undefined ? this._props[name] : config.default;\n        },\n        set(value) {\n          const oldValue = this._props[name];\n          this._props[name] = value;\n\n          // Reflect to attribute if specified\n          if (config.reflect) {\n            const attrName = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n\n            if (value === null || value === undefined) {\n              this.removeAttribute(attrName);\n            } else if (typeof value === 'boolean') {\n              if (value) {\n                this.setAttribute(attrName, '');\n              } else {\n                this.removeAttribute(attrName);\n              }\n            } else {\n              this.setAttribute(attrName, value);\n            }\n          }\n\n          // Call property changed callback if it exists\n          if (typeof this.propertyChanged === 'function' && oldValue !== value) {\n            this.propertyChanged(name, oldValue, value);\n          }\n        },\n        configurable: true,\n        enumerable: true\n      });\n\n      // Add to observed attributes if reflective\n      if (config.reflect && !CustomComponent.observedAttributes.includes(name)) {\n        const attrName = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n        CustomComponent.observedAttributes.push(attrName);\n      }\n    });\n  }\n\n  // Define the custom element\n  customElements.define(tagName, CustomComponent);\n\n  return CustomComponent;\n}\n","/**\n * Component Loader\n * Loads and parses HTML component files\n */\n\n/**\n * Loads a component from an HTML file\n * @param {string} url - The URL of the HTML file\n * @returns {Promise<Object>} - The parsed component\n */\nexport async function loadComponent(url) {\n  try {\n    const response = await fetch(url);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to load component from ${url}: ${response.statusText}`);\n    }\n    \n    const html = await response.text();\n    return parseComponent(html);\n  } catch (error) {\n    console.error(`Error loading component: ${error.message}`);\n    throw error;\n  }\n}\n\n/**\n * Parses a component from HTML string\n * @param {string} html - The HTML string\n * @returns {Object} - The parsed component\n */\nexport function parseComponent(html) {\n  // Create a temporary document to parse the HTML\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n  \n  // Extract template\n  const templateElement = doc.querySelector('template');\n  const template = templateElement ? templateElement.innerHTML.trim() : '';\n  \n  // Extract style\n  const styleElement = doc.querySelector('style');\n  const style = styleElement ? styleElement.textContent.trim() : '';\n  \n  // Extract script\n  const scriptElement = doc.querySelector('script');\n  let script = {};\n  \n  if (scriptElement) {\n    try {\n      // Extract the content of the script tag\n      const scriptContent = scriptElement.textContent.trim();\n      \n      // Create a function that will evaluate the script and return the exported object\n      const scriptFunction = new Function('exports', `\n        const module = { exports: {} };\n        const exportObj = {};\n        \n        // Define export default\n        function exportDefault(obj) {\n          Object.assign(exportObj, obj);\n        }\n        \n        // Execute the script\n        ${scriptContent}\n        \n        // Return the exported object\n        return exportObj;\n      `);\n      \n      // Execute the function to get the exported object\n      script = scriptFunction();\n    } catch (error) {\n      console.error(`Error parsing script: ${error.message}`);\n    }\n  }\n  \n  // Extract attributes from the root element\n  const rootElement = doc.body.firstElementChild;\n  const attributes = {};\n  \n  if (rootElement) {\n    Array.from(rootElement.attributes).forEach(attr => {\n      if (attr.name.startsWith('data-')) {\n        const propName = attr.name.replace('data-', '').replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n        attributes[propName] = attr.value;\n      }\n    });\n  }\n  \n  return {\n    template,\n    style,\n    script,\n    attributes\n  };\n}\n","/**\n * Component Registry\n * Manages component registration and loading\n */\n\nimport { Component } from './component.js';\nimport { loadComponent, parseComponent } from './loader.js';\n\n// Store for registered components\nconst registry = new Map();\n\n/**\n * Register a component\n * @param {string} tagName - The tag name for the custom element\n * @param {Object|string} options - Component options or URL to HTML file\n * @returns {Promise<typeof Component>} - The component class\n */\nexport async function register(tagName, options) {\n  // If options is a string, treat it as a URL and load the component\n  if (typeof options === 'string') {\n    try {\n      const component = await loadComponent(options);\n      return registerComponent(tagName, component);\n    } catch (error) {\n      console.error(`Failed to register component ${tagName}: ${error.message}`);\n      throw error;\n    }\n  } else {\n    // If options is an object, register directly\n    return registerComponent(tagName, options);\n  }\n}\n\n/**\n * Register a component with the given options\n * @param {string} tagName - The tag name for the custom element\n * @param {Object} options - The component options\n * @returns {typeof Component} - The component class\n */\nfunction registerComponent(tagName, options) {\n  // Create a new component class that extends the base Component\n  class CustomComponent extends Component {}\n\n  // Add static properties\n  CustomComponent.template = options.template || '';\n  CustomComponent.styles = options.style || '';\n  CustomComponent.useShadow = options.script?.useShadow === true;\n  CustomComponent.observedAttributes = options.script?.observedAttributes || [];\n\n  // Add methods to the prototype\n  if (options.script?.methods) {\n    Object.entries(options.script.methods).forEach(([name, method]) => {\n      CustomComponent.prototype[name] = method;\n    });\n  }\n\n  // Add lifecycle hooks\n  ['init', 'connected', 'disconnected', 'attributeChanged', 'propertyChanged'].forEach(hook => {\n    if (typeof options.script?.[hook] === 'function') {\n      CustomComponent.prototype[hook] = options.script[hook];\n    }\n  });\n\n  // Add property getters and setters\n  if (options.script?.properties) {\n    Object.entries(options.script.properties).forEach(([name, config]) => {\n      // Define the property\n      Object.defineProperty(CustomComponent.prototype, name, {\n        get() {\n          return this._props[name] !== undefined ? this._props[name] : config.default;\n        },\n        set(value) {\n          const oldValue = this._props[name];\n          this._props[name] = value;\n\n          // Reflect to attribute if specified\n          if (config.reflect) {\n            const attrName = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n\n            if (value === null || value === undefined) {\n              this.removeAttribute(attrName);\n            } else if (typeof value === 'boolean') {\n              if (value) {\n                this.setAttribute(attrName, '');\n              } else {\n                this.removeAttribute(attrName);\n              }\n            } else {\n              this.setAttribute(attrName, value);\n            }\n          }\n\n          // Call property changed callback if it exists\n          if (typeof this.propertyChanged === 'function' && oldValue !== value) {\n            this.propertyChanged(name, oldValue, value);\n          }\n        },\n        configurable: true,\n        enumerable: true\n      });\n\n      // Add to observed attributes if reflective\n      if (config.reflect && !CustomComponent.observedAttributes.includes(name)) {\n        const attrName = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n        CustomComponent.observedAttributes.push(attrName);\n      }\n    });\n  }\n\n  // Define the custom element\n  customElements.define(tagName, CustomComponent);\n\n  // Store the component in the registry\n  registry.set(tagName, CustomComponent);\n\n  return CustomComponent;\n}\n\n/**\n * Get a registered component\n * @param {string} tagName - The tag name of the component\n * @returns {typeof Component|undefined} - The component class or undefined if not found\n */\nexport function getComponent(tagName) {\n  return registry.get(tagName);\n}\n\n/**\n * Check if a component is registered\n * @param {string} tagName - The tag name of the component\n * @returns {boolean} - Whether the component is registered\n */\nexport function hasComponent(tagName) {\n  return registry.has(tagName);\n}\n"],"names":[],"mappings":"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"}